# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '16 0 * * 2'

jobs:
  analyze:
    name: CodeQL Analyze
    runs-on: windows-2019
    timeout-minutes: 360
    permissions:
      # required for all workflows
      security-events: write

    strategy:
      matrix:
        arch: [Win32, x64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        clean: true
        submodules: recursive
        fetch-depth: 0

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: c-cpp

    - uses: actions/checkout@v3
      with:
        clean: true
        submodules: recursive
        fetch-depth: 0

    - name: Declare build output variables
      id: vars
      shell: bash
      env:
        HEAD_REF: ${{ github.head_ref || github.ref_name }}
      run: |
        echo "build_version=$(git describe --always --tags "refs/remotes/origin/${HEAD_REF}")" >> $GITHUB_OUTPUT
        echo "build_config=RelWithDebInfo" >> $GITHUB_OUTPUT

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: "3.23.2"

    - name: Install latest conan
      run: |
        python -m pip install --upgrade pip
        pip install -v "conan==1.57.0"

    - name: Try to restore conan cache
      id: conan-cache-restore
      uses: actions/cache/restore@v3
      env:
        cache-name: cache-conan-modules
      with:
        path: ~/.conan/data
        key: conan-windows-${{ matrix.arch }}-${{ hashFiles('CMakeLists.txt', 'lib/CMakeLists.txt', 'SDK/CMakeLists.txt', 'SDK/lib/cmake-conan/conan.cmake', 'SDK/lib/cmake-conan/conan-omp.cmake') }}

    - name: Generate build files
      run: |
        $env:OMP_BUILD_VERSION=$(git rev-list $(git rev-list --max-parents=0 HEAD) HEAD | Measure-Object -Line).Lines
        $env:OMP_BUILD_COMMIT=$(git rev-parse HEAD)
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ steps.vars.outputs.build_config }} .. -A ${{ matrix.arch }} -T "ClangCL"

    - name: Try to save conan cache
      if: steps.conan-cache-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      env:
        cache-name: cache-conan-modules
      with:
        path: ~/.conan/data
        key: ${{ steps.conan-cache-restore.outputs.cache-primary-key }}

    - name: Build
      run: |
        cd build
        cmake --build . --config ${{ steps.vars.outputs.build_config }}

    - name: Create a build archive
      id: build
      shell: bash
      env:
        HEAD_REF: ${{ github.head_ref || github.ref_name }}
      run: |
        version=${{ steps.vars.outputs.build_version }}
        artifact_name="open.mp-win-${{ matrix.arch }}-${version}"
        echo "artifact_name=${artifact_name}" >> $GITHUB_OUTPUT
        cd build/Output/*
        powershell -NoLogo -NoProfile -Command Compress-Archive -DestinationPath "${artifact_name}.zip" -Path "Server"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.build.outputs.artifact_name }}
        path: build/Output/${{ steps.vars.outputs.build_config }}/${{ steps.build.outputs.artifact_name }}.zip
        if-no-files-found: error

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:c-cpp"
